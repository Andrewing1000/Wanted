version: "3.8"

services:
  # ————— Jenkins CI/CD —————
  jenkins:
    image: jenkins/jenkins:lts
    user: root
    ports:
      - "8081:8080"    # Jenkins UI en el host:8081 → contenedor:8080
      - "50000:50000"  # para agentes remotos (opcional)
    volumes:
      - jenkins_home:/var/jenkins_home   # persiste config, jobs, plugins :contentReference[oaicite:0]{index=0}
      - /var/run/docker.sock:/var/run/docker.sock  # para que Jenkins controle Docker :contentReference[oaicite:1]{index=1}

  # ————— Django app —————
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8080:8080"
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db
      - jenkins   # opcional: espera que Jenkins esté arriba (no bloquea ejecución)
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8080"

  # ————— Base de datos Postgres —————
  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgres/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

volumes:
  jenkins_home:
  dev-db-data:
  dev-static-data:
